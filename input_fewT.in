128  !n of residues
1711 !number of electrostatic contacts
14400.0 !protein mass (g/mol)
-8.312E-002  -2.452E-002   29.0 0.05 -4.671E-004 1.575E-003   5.541E-003 0.13 !contact eps  (KJ/mol),entropy of one residue q (KJ/K/mol), eps_eff, Isolv(M), deltaCp(KJ mol-1 K-1), a(KJ/molK), b(KJ/molK2), gamma (H_ll=-g H_nn)
50, 420, 7,385 !280,380,0.05,385
20 !number of experimental datapoints for specific heat (only used while optimization, if you don't have data, just put any positive number
0,0,1 !(en nuestro caso, 0,0,1 ; el valor diferente de 1 sirve para salir del bucle) 
2	! the first number is the number of (S,T) intervals you want to calculate <prod_k=S^T m_k sigma_k>. Then it follows the values of S, and then those for T	
10
119
16
126	!! it ends here. If I put it all in the same line I have errors (thx Fortran!)
rCalpha.txt
1DPX.map
1DPX_elec.map
cmapASA_1dpxmod_uf_HP.dat
1DPX_expCp.txt
ct
.true. !triggers the calculation of the average energy
.true.    !triggers the calculation of the specific heat
.true. !triggers the calculation of the average native and loopy fraction: <m> and <m sigma>
.false. !triggers the calculation of the folded fraction (Zf/Z, folding constant)
.false. !triggers the calculation of the native strings
.false. !triggers the calculation of the free energy profiles 
.false. !triggers the calculation of the profile for folding probability of any residue <m_i>_M                    (normal WSME, in the profiles subroutine)     
.false. !triggers the calculation of the profile for folding probability of any residue: <m_i> and <m_i sigma_i>    (LOOPY)
.false. !triggers the calculation of the profile for folding probability of any island: <m_ij> and <m_ij sigma_ij> (LOOPY)
.false. !triggers the calculation of <prod_k=S^T m_k sigma_k>
.false. !if .true., changes all flags to calculate only the specific heat (used while doing optimization)
.true. !if .true., the model will use disulfide bridges e(1,SS_matrix(i,1),SS_matrix(i,2)) = -120.0_db
.true. !if .false., removes the cmd output of WSME_genTden
.true. !if .true., deltaT takes a constant value (the one given before). Used while optimization if experimental data hasn't a constant deltaT
.false. !if .true., it calculates f(L) which implies the calculation of all <prod_k=s^t m_k sigma_k> islands
.true. !if .true., calculates folding profile <prod_k=s^t 1-sigma_k><prod m_k>

