setwd("C:/Users/cjase/Downloads/TFM/code/plots/tuning exp data")
library(ggplot2)
# Cargar el archivo 1DPX_expCp
data1 <- read.table("1DPX_expCp.txt", header = FALSE)
colnames(data1) <- c("T", "Cp")  # Asignar nombres a las columnas
# Extender las temperaturas hasta 600K
max_temp <- max(data1$T)
extended_temps <- seq(max_temp + 1, 600, by = 1)
extended_Cp <- rep(tail(data1$Cp, 1), length(extended_temps))
# Añadir los datos extendidos al conjunto original
extended_data1 <- data.frame(T = extended_temps, Cp = extended_Cp)
data1 <- rbind(data1, extended_data1)
# Constantes conocidas
a <- -2.4
b <- 6.041E-003
M <- 14.400
# Aplicar la fórmula a cada punto
data1$Cp <- data1$Cp + (a + b * data1$T) * M
# Leer el archivo profthermo.dat sin encabezado
data2 <- read.table("profthermo.dat", header = FALSE)
colnames(data2) <- c("col1", "T", "col3", "col4", "col5", "col6", "col7", "Cp")
# Filtrar data2 para las temperaturas entre el mínimo y el máximo de data1
filtered_data2 <- subset(data2, T >= min(data1$T) & T <= max(data1$T))
# Crear la gráfica con ggplot2
ggplot() +
geom_line(data = data1, aes(x = T, y = Cp), color = "blue") +
geom_line(data = filtered_data2, aes(x = T, y = Cp), color = "red", linetype = "dashed") +
labs(title = "Comparación de Cp vs. T",
x = "Temperatura (K)",
y = "Cp (KJ/K/mol)",
caption = "Línea azul: 1DPX_expCp extendido | Línea roja: profthermo.dat") +
theme_minimal()
# Mostrar la gráfica
# Guardar el resultado en un archivo si es necesario
#write.table(data, "1DPX_expCp_extended.dat", row.names = FALSE, quote = FALSE)
library(ggplot2)
# Cargar el archivo 1DPX_expCp
data1 <- read.table("1DPX_expCp.txt", header = FALSE)
colnames(data1) <- c("T", "Cp")  # Asignar nombres a las columnas
# Extender las temperaturas hasta 600K
max_temp <- max(data1$T)
extended_temps <- seq(max_temp + 1, 400, by = 1)
extended_Cp <- rep(tail(data1$Cp, 1), length(extended_temps))
# Añadir los datos extendidos al conjunto original
extended_data1 <- data.frame(T = extended_temps, Cp = extended_Cp)
data1 <- rbind(data1, extended_data1)
# Constantes conocidas
a <- -2.4
b <- 6.041E-003
M <- 14.400
# Aplicar la fórmula a cada punto
data1$Cp <- data1$Cp + (a + b * data1$T) * M
# Leer el archivo profthermo.dat sin encabezado
data2 <- read.table("profthermo.dat", header = FALSE)
colnames(data2) <- c("col1", "T", "col3", "col4", "col5", "col6", "col7", "Cp")
# Filtrar data2 para las temperaturas entre el mínimo y el máximo de data1
filtered_data2 <- subset(data2, T >= min(data1$T) & T <= max(data1$T))
# Crear la gráfica con ggplot2
ggplot() +
geom_line(data = data1, aes(x = T, y = Cp), color = "blue") +
geom_line(data = filtered_data2, aes(x = T, y = Cp), color = "red", linetype = "dashed") +
labs(title = "Comparación de Cp vs. T",
x = "Temperatura (K)",
y = "Cp (KJ/K/mol)",
caption = "Línea azul: 1DPX_expCp extendido | Línea roja: profthermo.dat") +
theme_minimal()
# Mostrar la gráfica
# Guardar el resultado en un archivo si es necesario
#write.table(data, "1DPX_expCp_extended.dat", row.names = FALSE, quote = FALSE)
# Guardar el resultado en un archivo si es necesario
write.table(data, "1DPX_expCp_extended.dat", row.names = FALSE, quote = FALSE)
# Guardar el resultado en un archivo si es necesario
write.table(data, "1DPX_expCp_extended.dat", row.names = FALSE, quote = FALSE)
View(extended_data1)
View(data1)
View(extended_data1)
# Guardar el resultado en un archivo si es necesario
write.table(data1, "1DPX_expCp_extended.dat", row.names = FALSE, quote = FALSE)
# Guardar el resultado en un archivo si es necesario
write.table(data1, "1DPX_expCp_extended.dat", row.names = FALSE, quote = FALSE,header=FALSE)
# Guardar el resultado en un archivo si es necesario
write.table(data1, "1DPX_expCp_extended.txt", row.names = FALSE, quote = FALSE)
library(ggplot2)
# Cargar el archivo 1DPX_expCp
data1 <- read.table("1DPX_expCp.txt", header = FALSE)
colnames(data1) <- c("T", "Cp")  # Asignar nombres a las columnas
# Extender las temperaturas hasta 600K
max_temp <- max(data1$T)
extended_temps <- seq(max_temp + 1, 400, by = 1)
extended_Cp <- rep(tail(data1$Cp, 1), length(extended_temps))
# Añadir los datos extendidos al conjunto original
extended_data1 <- data.frame(T = extended_temps, Cp = extended_Cp)
data1 <- rbind(data1, extended_data1)
# Constantes conocidas
a <- -2.4
b <- 6.041E-003
M <- 14.400
# Aplicar la fórmula a cada punto
data1$Cp <- data1$Cp + (a + b * data1$T) * M
# Leer el archivo profthermo.dat sin encabezado
data2 <- read.table("profthermo.dat", header = FALSE)
colnames(data2) <- c("col1", "T", "col3", "col4", "col5", "col6", "col7", "Cp")
# Filtrar data2 para las temperaturas entre el mínimo y el máximo de data1
filtered_data2 <- subset(data2, T >= min(data1$T) & T <= max(data1$T))
# Crear la gráfica con ggplot2
ggplot() +
geom_line(data = data1, aes(x = T, y = Cp), color = "blue") +
geom_line(data = filtered_data2, aes(x = T, y = Cp), color = "red", linetype = "dashed") +
labs(title = "Comparación de Cp vs. T",
x = "Temperatura (K)",
y = "Cp (KJ/K/mol)",
caption = "Línea azul: 1DPX_expCp extendido | Línea roja: profthermo.dat") +
theme_minimal()
# Mostrar la gráfica
# Guardar el resultado en un archivo si es necesario
write.table(data1, "1DPX_expCp_extended.txt", row.names = FALSE, quote = FALSE)
library(ggplot2)
# Cargar el archivo 1DPX_expCp
data1 <- read.table("1DPX_expCp.txt", header = FALSE)
colnames(data1) <- c("T", "Cp")  # Asignar nombres a las columnas
# Extender las temperaturas hasta 600K
max_temp <- max(data1$T)
extended_temps <- seq(max_temp + 1, 400, by = 1)
extended_Cp <- rep(tail(data1$Cp, 1), length(extended_temps))
# Añadir los datos extendidos al conjunto original
extended_data1 <- data.frame(T = extended_temps, Cp = extended_Cp)
data1 <- rbind(data1, extended_data1)
# Constantes conocidas
a <- -2.4
b <- 6.041E-003
M <- 14.400
# Aplicar la fórmula a cada punto
data1$Cp <- data1$Cp + (a + b * data1$T) * M
# Leer el archivo profthermo.dat sin encabezado
data2 <- read.table("profthermo.dat", header = FALSE)
colnames(data2) <- c("col1", "T", "col3", "col4", "col5", "col6", "col7", "Cp")
# Filtrar data2 para las temperaturas entre el mínimo y el máximo de data1
filtered_data2 <- subset(data2, T >= min(data1$T) & T <= max(data1$T))
# Crear la gráfica con ggplot2
ggplot() +
geom_line(data = data1, aes(x = T, y = Cp), color = "blue") +
geom_line(data = filtered_data2, aes(x = T, y = Cp), color = "red", linetype = "dashed") +
labs(title = "Comparación de Cp vs. T",
x = "Temperatura (K)",
y = "Cp (KJ/K/mol)",
caption = "Línea azul: 1DPX_expCp extendido | Línea roja: profthermo.dat") +
theme_minimal()
# Mostrar la gráfica
# Guardar el resultado en un archivo si es necesario
#write.table(data1, "1DPX_expCp_extended.txt", row.names = FALSE, quote = FALSE)
library(ggplot2)
# Cargar el archivo 1DPX_expCp
data1 <- read.table("1DPX_expCp.txt", header = FALSE)
colnames(data1) <- c("T", "Cp")  # Asignar nombres a las columnas
# Extender las temperaturas hasta 600K
max_temp <- max(data1$T)
extended_temps <- seq(max_temp + 1, 370, by = 1)
extended_Cp <- rep(tail(data1$Cp, 1), length(extended_temps))
# Añadir los datos extendidos al conjunto original
extended_data1 <- data.frame(T = extended_temps, Cp = extended_Cp)
data1 <- rbind(data1, extended_data1)
# Constantes conocidas
a <- -2.4
b <- 6.041E-003
M <- 14.400
# Aplicar la fórmula a cada punto
data1$Cp <- data1$Cp + (a + b * data1$T) * M
# Leer el archivo profthermo.dat sin encabezado
data2 <- read.table("profthermo.dat", header = FALSE)
colnames(data2) <- c("col1", "T", "col3", "col4", "col5", "col6", "col7", "Cp")
# Filtrar data2 para las temperaturas entre el mínimo y el máximo de data1
filtered_data2 <- subset(data2, T >= min(data1$T) & T <= max(data1$T))
# Crear la gráfica con ggplot2
ggplot() +
geom_line(data = data1, aes(x = T, y = Cp), color = "blue") +
geom_line(data = filtered_data2, aes(x = T, y = Cp), color = "red", linetype = "dashed") +
labs(title = "Comparación de Cp vs. T",
x = "Temperatura (K)",
y = "Cp (KJ/K/mol)",
caption = "Línea azul: 1DPX_expCp extendido | Línea roja: profthermo.dat") +
theme_minimal()
# Mostrar la gráfica
# Guardar el resultado en un archivo si es necesario
#write.table(data1, "1DPX_expCp_extended.txt", row.names = FALSE, quote = FALSE)
library(ggplot2)
# Cargar el archivo 1DPX_expCp
data1 <- read.table("1DPX_expCp.txt", header = FALSE)
colnames(data1) <- c("T", "Cp")  # Asignar nombres a las columnas
# Extender las temperaturas
max_temp <- max(data1$T)
extended_temps <- seq(max_temp + 1, 370, by = 1)
extended_Cp <- rep(tail(data1$Cp, 1), length(extended_temps))
# Mínimo valor
min_temp <- 345  # Puedes cambiar este valor según lo que desees
# Añadir los datos extendidos al conjunto original
extended_data1 <- data.frame(T = extended_temps, Cp = extended_Cp)
data1 <- rbind(data1, extended_data1)
# Constantes conocidas
a <- -2.4
b <- 6.041E-003
M <- 14.400
# Aplicar la fórmula a cada punto
data1$Cp <- data1$Cp + (a + b * data1$T) * M
# Leer el archivo profthermo.dat sin encabezado
data2 <- read.table("profthermo.dat", header = FALSE)
colnames(data2) <- c("col1", "T", "col3", "col4", "col5", "col6", "col7", "Cp")
# Seleccionar la temperatura mínima
# Filtrar data2 para las temperaturas entre el mínimo y el máximo de data1
filtered_data2 <- subset(data2, T >= min_temp & T <= max(data1$T))
filtered_data1 <- subset(data1, T >= min_temp)
# Crear la gráfica con ggplot2
ggplot() +
geom_line(data = filtered_data1, aes(x = T, y = Cp), color = "blue") +
geom_line(data = filtered_data2, aes(x = T, y = Cp), color = "red", linetype = "dashed") +
labs(title = "Comparación de Cp vs. T",
x = "Temperatura (K)",
y = "Cp (KJ/K/mol)",
caption = "Línea azul: 1DPX_expCp extendido | Línea roja: profthermo.dat") +
theme_minimal()
# Guardar los datos filtrados en un archivo
write.table(filtered_data1, "1DPX_expCp_filtered.txt", row.names = FALSE, quote = FALSE)
library(ggplot2)
# Cargar el archivo 1DPX_expCp
data1 <- read.table("1DPX_expCp.txt", header = FALSE)
colnames(data1) <- c("T", "Cp")  # Asignar nombres a las columnas
# Extender las temperaturas
max_temp <- max(data1$T)
extended_temps <- seq(max_temp + 1, 365, by = 1)
library(ggplot2)
# Cargar el archivo 1DPX_expCp
data1 <- read.table("1DPX_expCp.txt", header = FALSE)
colnames(data1) <- c("T", "Cp")  # Asignar nombres a las columnas
# Extender las temperaturas
max_temp <- max(data1$T)
extended_temps <- seq(max_temp + 1, 370, by = 1)
extended_Cp <- rep(tail(data1$Cp, 1), length(extended_temps))
# Mínimo valor
min_temp <- 335  # Puedes cambiar este valor según lo que desees
# Añadir los datos extendidos al conjunto original
extended_data1 <- data.frame(T = extended_temps, Cp = extended_Cp)
data1 <- rbind(data1, extended_data1)
# Constantes conocidas
a <- -2.4
b <- 6.041E-003
M <- 14.400
# Aplicar la fórmula a cada punto
data1$Cp <- data1$Cp + (a + b * data1$T) * M
# Leer el archivo profthermo.dat sin encabezado
data2 <- read.table("profthermo.dat", header = FALSE)
colnames(data2) <- c("col1", "T", "col3", "col4", "col5", "col6", "col7", "Cp")
# Seleccionar la temperatura mínima
# Filtrar data2 para las temperaturas entre el mínimo y el máximo de data1
filtered_data2 <- subset(data2, T >= min_temp & T <= max(data1$T))
filtered_data1 <- subset(data1, T >= min_temp)
# Crear la gráfica con ggplot2
ggplot() +
geom_line(data = filtered_data1, aes(x = T, y = Cp), color = "blue") +
geom_line(data = filtered_data2, aes(x = T, y = Cp), color = "red", linetype = "dashed") +
labs(title = "Comparación de Cp vs. T",
x = "Temperatura (K)",
y = "Cp (KJ/K/mol)",
caption = "Línea azul: 1DPX_expCp extendido | Línea roja: profthermo.dat") +
theme_minimal()
# Guardar los datos filtrados en un archivo
write.table(filtered_data1, "1DPX_expCp_filtered.txt", row.names = FALSE, quote = FALSE)
library(ggplot2)
# Cargar el archivo 1DPX_expCp
data1 <- read.table("1DPX_expCp.txt", header = FALSE)
colnames(data1) <- c("T", "Cp")  # Asignar nombres a las columnas
# Extender las temperaturas
max_temp <- max(data1$T)
extended_temps <- seq(max_temp + 1, 365, by = 1.)
library(ggplot2)
# Cargar el archivo 1DPX_expCp
data1 <- read.table("1DPX_expCp.txt", header = FALSE)
colnames(data1) <- c("T", "Cp")  # Asignar nombres a las columnas
# Extender las temperaturas
max_temp <- max(data1$T)
extended_temps <- seq(max_temp + 1, 365.2, by = 1.)
library(ggplot2)
# Cargar el archivo 1DPX_expCp
data1 <- read.table("1DPX_expCp.txt", header = FALSE)
colnames(data1) <- c("T", "Cp")  # Asignar nombres a las columnas
# Extender las temperaturas
max_temp <- max(data1$T)
extended_temps <- seq(max_temp + 1, 365.3, by = 1.)
library(ggplot2)
# Cargar el archivo 1DPX_expCp
data1 <- read.table("1DPX_expCp.txt", header = FALSE)
colnames(data1) <- c("T", "Cp")  # Asignar nombres a las columnas
# Extender las temperaturas
max_temp <- max(data1$T)
extended_temps <- seq(max_temp + 1, 366.3, by = 1.)
extended_Cp <- rep(tail(data1$Cp, 1), length(extended_temps))
# Mínimo valor
min_temp <- 335  # Puedes cambiar este valor según lo que desees
# Añadir los datos extendidos al conjunto original
extended_data1 <- data.frame(T = extended_temps, Cp = extended_Cp)
data1 <- rbind(data1, extended_data1)
# Constantes conocidas
a <- -2.4
b <- 6.041E-003
M <- 14.400
# Aplicar la fórmula a cada punto
data1$Cp <- data1$Cp + (a + b * data1$T) * M
# Leer el archivo profthermo.dat sin encabezado
data2 <- read.table("profthermo.dat", header = FALSE)
colnames(data2) <- c("col1", "T", "col3", "col4", "col5", "col6", "col7", "Cp")
# Seleccionar la temperatura mínima
# Filtrar data2 para las temperaturas entre el mínimo y el máximo de data1
filtered_data2 <- subset(data2, T >= min_temp & T <= max(data1$T))
filtered_data1 <- subset(data1, T >= min_temp)
# Crear la gráfica con ggplot2
ggplot() +
geom_line(data = filtered_data1, aes(x = T, y = Cp), color = "blue") +
geom_line(data = filtered_data2, aes(x = T, y = Cp), color = "red", linetype = "dashed") +
labs(title = "Comparación de Cp vs. T",
x = "Temperatura (K)",
y = "Cp (KJ/K/mol)",
caption = "Línea azul: 1DPX_expCp extendido | Línea roja: profthermo.dat") +
theme_minimal()
# Guardar los datos filtrados en un archivo
write.table(filtered_data1, "1DPX_expCp_filtered.txt", row.names = FALSE, quote = FALSE)
