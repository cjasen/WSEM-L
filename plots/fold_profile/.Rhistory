labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue a",
y = "Residue b",
fill = "Valor" # Etiqueta del gradiente
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Leer la matriz desde el archivo
matrix_data <- as.matrix(read.table("fold_profile.txt", header = FALSE))
# Convertir la matriz recortada a formato largo para ggplot
matrix_long <- melt(matrix_data)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue a",
y = "Residue b",
fill = "Valor" # Etiqueta del gradiente
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[upper.tri(matrix_data_upper_white)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con la parte superior izquierda en blanco
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
geom_tile(color = "grey90", na.rm = FALSE) + # Mantener líneas claras en celdas con NA
scale_fill_gradient(
low = "white", high = "blue", na.value = "white" # NA en blanco
) +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue a",
y = "Residue b",
fill = "Valor"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[lower.tri(matrix_data_upper_white, diag = TRUE)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con la parte superior izquierda en blanco
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
geom_tile(color = "grey90", na.rm = FALSE) + # Mantener líneas claras en celdas con NA
scale_fill_gradient(
low = "white", high = "blue", na.value = "white" # NA en blanco
) +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue a",
y = "Residue b",
fill = "Valor"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[lower.tri(matrix_data_upper_white, diag = TRUE)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con la parte superior izquierda en blanco
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
geom_tile(color = "grey90", na.rm = FALSE) + # Mantener líneas claras en celdas con NA
scale_fill_gradient(
low = "white", high = "blue", na.value = "white" # NA en blanco
) +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue b",
y = "Residue a",
fill = "Value"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[lower.tri(matrix_data_upper_white, diag = TRUE)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con la parte superior izquierda en blanco
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
#geom_tile(color = "grey90", na.rm = FALSE) + # Mantener líneas claras en celdas con NA
scale_fill_gradient(
low = "white", high = "blue", na.value = "white" # NA en blanco
) +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue b",
y = "Residue a",
fill = "Value"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[lower.tri(matrix_data_upper_white, diag = TRUE)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con la parte superior izquierda en blanco
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
geom_tile(color = "grey90", na.rm = FALSE) + # Mantener líneas claras en celdas con NA
scale_fill_gradient(
low = "white", high = "blue", na.value = "white" # NA en blanco
) +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue b",
y = "Residue a",
fill = "Value"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[lower.tri(matrix_data_upper_white, diag = TRUE)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con la parte superior izquierda en blanco
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
geom_tile(color = "white", na.rm = FALSE) + # Mantener líneas claras en celdas con NA
scale_fill_gradient(
low = "white", high = "blue", na.value = "white" # NA en blanco
) +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue b",
y = "Residue a",
fill = "Value"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
View(matrix_data_upper_white)
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[lower.tri(matrix_data_upper_white, diag = TRUE)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con la parte superior izquierda en blanco
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
geom_tile(color = "white", na.rm = FALSE) + # Mantener líneas claras en celdas con NA
scale_fill_gradient(
low = "gray", high = "red3", na.value = "white" # NA en blanco
) +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue b",
y = "Residue a",
fill = "Value"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[lower.tri(matrix_data_upper_white, diag = TRUE)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con la parte superior izquierda en blanco
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
geom_tile(color = "white", na.rm = FALSE) + # Mantener líneas claras en celdas con NA
scale_fill_gradient(
low = "gray", high = "red4", na.value = "white" # NA en blanco
) +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue b",
y = "Residue a",
fill = "Value"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[lower.tri(matrix_data_upper_white, diag = TRUE)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con transición suave
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
geom_raster(na.rm = FALSE) + # Transición suave sin bordes visibles
scale_fill_gradient(
low = "gray", high = "red4", na.value = "white" # NA en blanco
) +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue b",
y = "Residue a",
fill = "Value"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[lower.tri(matrix_data_upper_white, diag = TRUE)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con transición suave
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
geom_tile(na.rm = FALSE) + # Transición suave sin bordes visibles
scale_fill_gradient(
low = "gray", high = "red4", na.value = "white" # NA en blanco
) +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue b",
y = "Residue a",
fill = "Value"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[lower.tri(matrix_data_upper_white, diag = TRUE)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con transición suave
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
#geom_raster(na.rm = FALSE) + # Transición suave sin bordes visibles
geom_tile(color = "white", na.rm = FALSE) + # Mantener líneas claras en celdas con NA
scale_fill_gradient(
low = "gray", high = "red4", na.value = "white" # NA en blanco
) +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue b",
y = "Residue a",
fill = "Value"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[lower.tri(matrix_data_upper_white, diag = TRUE)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con transición suave
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
1geom_raster(na.rm = FALSE) + # Transición suave sin bordes
library(ggplot2)
library(reshape2)
# Crear la matriz diagonalizada para que la parte superior izquierda sea NA
matrix_data_upper_white <- matrix_data
matrix_data_upper_white[lower.tri(matrix_data_upper_white, diag = TRUE)] <- NA
# Convertir la matriz modificada a formato largo
matrix_long <- melt(matrix_data_upper_white)
colnames(matrix_long) <- c("Row", "Column", "Value") # Renombrar las columnas
# Convertir columnas a numéricas
matrix_long$Column <- as.numeric(matrix_long$Column)
matrix_long$Row <- as.numeric(matrix_long$Row)
# Crear el mapa de calor con transición suave
heatmap_plot <- ggplot(matrix_long, aes(x = Column, y = Row, fill = Value)) +
geom_raster(na.rm = FALSE) + # Transición suave sin bordes
#geom_tile(color = "white", na.rm = FALSE) + # Grid para ver cada elemento
scale_fill_gradient(
low = "gray", high = "red4", na.value = "white" # NA en blanco
) +
scale_x_continuous(
breaks = seq(0, ncol(matrix_data), by = 10), # Mostrar cada 10 columnas
labels = seq(0, ncol(matrix_data), by = 10) # Etiquetar con los números de las columnas
) +
scale_y_continuous(
breaks = seq(0, nrow(matrix_data), by = 10), # Mostrar cada 10 filas
labels = seq(0, nrow(matrix_data), by = 10) # Etiquetar con los números de las filas
) +
labs(
x = "Residue b",
y = "Residue a",
fill = "Value"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.y = element_text(size = 10)
)
# Mostrar el gráfico
print(heatmap_plot)
